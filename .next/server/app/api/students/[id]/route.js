"use strict";(()=>{var e={};e.id=294,e.ids=[294],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1787:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var s={};r.r(s),r.d(s,{PATCH:()=>d});var a=r(9303),i=r(8716),n=r(670),o=r(7070),u=r(71);async function d(e,{params:t}){let r=t.id;if(!r)return o.NextResponse.json({error:"missing id"},{status:400});let s=await e.json().catch(()=>null);if(!s||"string"!=typeof s.foreName||!s.foreName.trim())return o.NextResponse.json({error:"invalid body"},{status:400});let a=s.foreName.trim();try{let e=await u._.student.update({where:{id:r},data:{foreName:a}});return o.NextResponse.json(e)}catch(e){return o.NextResponse.json({error:"update failed"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/students/[id]/route",pathname:"/api/students/[id]",filename:"route",bundlePath:"app/api/students/[id]/route"},resolvedPagePath:"/Users/jz/Platzhirsch/app/api/students/[id]/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:m}=p,h="/api/students/[id]/route";function x(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},71:(e,t,r)=>{r.d(t,{_:()=>a});var s=r(3524);let a=globalThis.prisma??new s.PrismaClient({log:["error"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,59],()=>r(1787));module.exports=s})();